{"version":3,"file":"static/js/27.e7dab235.chunk.js","mappings":"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","sources":["Page/Income.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  handleEdit,\n  handleDelete,\n  handleAddOrUpdate,\n  handleFilterChange,\n  getFilteredData,\n  getTotalAmount,\n  getUniqueMonths,\n  getUniqueCategories,\n} from '../Help/utils';\nimport incomeDataFile from '../data/incomeData';\n\nfunction Income() {\n  const [incomeData, setIncomeData] = useState(incomeDataFile);\n\n  const [newIncome, setNewIncome] = useState({ name: '', amount: '', date: '', category: '' });\n  const [editIndex, setEditIndex] = useState(null);\n  const [monthFilter, setMonthFilter] = useState('');\n  const [categoryFilter, setCategoryFilter] = useState('');\n\n  useEffect(() => {\n    console.log(incomeData); // Temporary log to verify data\n  }, [incomeData]);\n\n  const filteredData = getFilteredData(incomeData, monthFilter, categoryFilter);\n  const totalAmount = getTotalAmount(filteredData);\n  const uniqueMonths = getUniqueMonths(incomeData);\n  const uniqueCategories = getUniqueCategories(incomeData);\n\n  return (\n    <div>\n      <h1>Income</h1>\n      <div>\n        <label>\n          Filter by Month:\n          <select value={monthFilter} onChange={(e) => handleFilterChange(e, 'month', setMonthFilter, setCategoryFilter)}>\n            <option value=\"\">All</option>\n            {uniqueMonths.map((month) => (\n              <option key={month} value={month}>\n                {month}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label>\n          Filter by Category:\n          <select value={categoryFilter} onChange={(e) => handleFilterChange(e, 'category', setMonthFilter, setCategoryFilter)}>\n            <option value=\"\">All</option>\n            {uniqueCategories.map((category) => (\n              <option key={category} value={category}>\n                {category}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Amount</th>\n            <th>Date</th>\n            <th>Category</th>\n            <th>Edit/Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredData.map((income, index) => (\n            <tr key={index}>\n              <td>{income.name}</td>\n              <td>{income.amount.toFixed(2)} Euro</td>\n              <td>{income.date}</td>\n              <td>{income.category}</td>\n              <td>\n                <button onClick={() => handleEdit(index, incomeData, setNewIncome, setEditIndex)}>Edit</button>\n                <button onClick={() => handleDelete(index, incomeData, setIncomeData, setNewIncome, setEditIndex)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n          <tr>\n            <td><strong>Total</strong></td>\n            <td><strong>{totalAmount} Euro</strong></td>\n            <td colSpan=\"3\"></td>\n          </tr>\n        </tbody>\n      </table>\n\n      <h2>{editIndex !== null ? 'Edit Income' : 'Add New Income'}</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          value={newIncome.name}\n          onChange={(e) => setNewIncome({ ...newIncome, name: e.target.value })}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Amount\"\n          value={newIncome.amount}\n          onChange={(e) => setNewIncome({ ...newIncome, amount: e.target.value })}\n        />\n        <input\n          type=\"date\"\n          placeholder=\"Date\"\n          value={newIncome.date}\n          onChange={(e) => setNewIncome({ ...newIncome, date: e.target.value })}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Category\"\n          value={newIncome.category}\n          onChange={(e) => setNewIncome({ ...newIncome, category: e.target.value })}\n        />\n        <button onClick={() => handleAddOrUpdate(newIncome, setNewIncome, incomeData, setIncomeData, editIndex, setEditIndex)}>\n          {editIndex !== null ? 'Update Income' : 'Add Income'}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Income;\n"],"names":["incomeData","setIncomeData","useState","incomeDataFile","newIncome","setNewIncome","name","amount","date","category","editIndex","setEditIndex","monthFilter","setMonthFilter","categoryFilter","setCategoryFilter","useEffect","console","log","filteredData","getFilteredData","totalAmount","getTotalAmount","uniqueMonths","getUniqueMonths","uniqueCategories","getUniqueCategories","_jsxs","children","_jsx","value","onChange","e","handleFilterChange","map","month","income","index","toFixed","onClick","handleEdit","handleDelete","colSpan","type","placeholder","target","handleAddOrUpdate"],"sourceRoot":""}