{"version":3,"file":"static/js/194.d3ca7ef8.chunk.js","mappings":"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","sources":["Page/MonthlyExpenses.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  handleEdit,\n  handleDelete,\n  handleAddOrUpdate,\n  handleFilterChange,\n  getFilteredData,\n  getTotalAmount,\n  getUniqueMonths,\n  getUniqueCategories,\n} from '../Help/utils';\nimport monthlyExpensesData from '../data/monthlyExpensesData';\n\nfunction MonthlyExpenses() {\n  const [expensesData, setExpensesData] = useState(monthlyExpensesData);\n\n  const [newExpense, setNewExpense] = useState({ name: '', amount: '', day: '', category: '', takeFrom: '', sendTo: '', end: '', restTimes: '', link: '' });\n  const [editIndex, setEditIndex] = useState(null);\n  const [monthFilter, setMonthFilter] = useState('');\n  const [categoryFilter, setCategoryFilter] = useState('');\n\n  useEffect(() => {\n    console.log(expensesData); // Temporary log to verify data\n  }, [expensesData]);\n\n  const filteredData = getFilteredData(expensesData, monthFilter, categoryFilter);\n  const totalAmount = getTotalAmount(filteredData);\n  const uniqueMonths = getUniqueMonths(expensesData);\n  const uniqueCategories = getUniqueCategories(expensesData);\n\n  return (\n    <div>\n      <h1>Monthly Expenses 24</h1>\n      <div>\n        <label>\n          Filter by Month:\n          <select value={monthFilter} onChange={(e) => handleFilterChange(e, 'month', setMonthFilter, setCategoryFilter)}>\n            <option value=\"\">All</option>\n            {uniqueMonths.map((month) => (\n              <option key={month} value={month}>\n                {month}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label>\n          Filter by Category:\n          <select value={categoryFilter} onChange={(e) => handleFilterChange(e, 'category', setMonthFilter, setCategoryFilter)}>\n            <option value=\"\">All</option>\n            {uniqueCategories.map((category) => (\n              <option key={category} value={category}>\n                {category}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Amount</th>\n            <th>Day</th>\n            <th>Category</th>\n            <th>Take From</th>\n            <th>Send To</th>\n            <th>End</th>\n            <th>Rest Times</th>\n            <th>Link</th>\n            <th>Edit/Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredData.map((expense, index) => (\n            <tr key={index}>\n              <td>{expense.name}</td>\n              <td>{expense.amount.toFixed(2)} Euro</td>\n              <td>{expense.day}</td>\n              <td>{expense.category}</td>\n              <td>{expense.takeFrom}</td>\n              <td>{expense.sendTo}</td>\n              <td>{expense.end}</td>\n              <td>{expense.restTimes}</td>\n              <td><a href={expense.link} target=\"_blank\" rel=\"noopener noreferrer\">Link</a></td>\n              <td>\n                <button onClick={() => handleEdit(index, expensesData, setNewExpense, setEditIndex)}>Edit</button>\n                <button onClick={() => handleDelete(index, expensesData, setExpensesData, setNewExpense, setEditIndex)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n          <tr>\n            <td><strong>Total</strong></td>\n            <td><strong>{totalAmount} Euro</strong></td>\n            <td colSpan=\"8\"></td>\n          </tr>\n        </tbody>\n      </table>\n\n      <h2>{editIndex !== null ? 'Edit Expense' : 'Add New Expense'}</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          value={newExpense.name}\n          onChange={(e) => setNewExpense({ ...newExpense, name: e.target.value })}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Amount\"\n          value={newExpense.amount}\n          onChange={(e) => setNewExpense({ ...newExpense, amount: e.target.value })}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Day\"\n          value={newExpense.day}\n          onChange={(e) => setNewExpense({ ...newExpense, day: e.target.value })}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Category\"\n          value={newExpense.category}\n          onChange={(e) => setNewExpense({ ...newExpense, category: e.target.value })}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Take From\"\n          value={newExpense.takeFrom}\n          onChange={(e) => setNewExpense({ ...newExpense, takeFrom: e.target.value })}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Send To\"\n          value={newExpense.sendTo}\n          onChange={(e) => setNewExpense({ ...newExpense, sendTo: e.target.value })}\n        />\n        <input\n          type=\"date\"\n          placeholder=\"End\"\n          value={newExpense.end}\n          onChange={(e) => setNewExpense({ ...newExpense, end: e.target.value })}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Rest Times\"\n          value={newExpense.restTimes}\n          onChange={(e) => setNewExpense({ ...newExpense, restTimes: e.target.value })}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Link\"\n          value={newExpense.link}\n          onChange={(e) => setNewExpense({ ...newExpense, link: e.target.value })}\n        />\n        <button onClick={() => handleAddOrUpdate(newExpense, setNewExpense, expensesData, setExpensesData, editIndex, setEditIndex)}>\n          {editIndex !== null ? 'Update Expense' : 'Add Expense'}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default MonthlyExpenses;\n"],"names":["expensesData","setExpensesData","useState","monthlyExpensesData","newExpense","setNewExpense","name","amount","day","category","takeFrom","sendTo","end","restTimes","link","editIndex","setEditIndex","monthFilter","setMonthFilter","categoryFilter","setCategoryFilter","useEffect","console","log","filteredData","getFilteredData","totalAmount","getTotalAmount","uniqueMonths","getUniqueMonths","uniqueCategories","getUniqueCategories","_jsxs","children","_jsx","value","onChange","e","handleFilterChange","map","month","expense","index","toFixed","href","target","rel","onClick","handleEdit","handleDelete","colSpan","type","placeholder","handleAddOrUpdate"],"sourceRoot":""}