{"version":3,"file":"static/js/145.66985a05.chunk.js","mappings":"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","sources":["Page/PocketPayback.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport paybackDataFile from '../data/paybackData';\nimport {\n  handleEdit,\n  handleDelete,\n  handleAddOrUpdate,\n  handleFilterChange,\n  getFilteredData,\n  getTotalAmount,\n  getUniqueValues,\n} from '../Help/utils';\n\nfunction PocketPayback() {\n  const [paybackData, setPaybackData] = useState(paybackDataFile);\n  const [newPayback, setNewPayback] = useState({ name: '', allAmount: '', notForMe: '', limitUsed: '', rest: '', overUsed: '', punkte: '', pointsInEuro: '' });\n  const [editIndex, setEditIndex] = useState(null);\n  const [monthFilter, setMonthFilter] = useState('');\n\n  useEffect(() => {\n    const updatedData = paybackData.map(item => ({\n      ...item,\n      rest: (item.allAmount - item.notForMe).toFixed(2),\n      overUsed: ((item.allAmount - item.notForMe - item.limitUsed) || 0).toFixed(2),\n      pointsInEuro: ((item.punkte / 100) || 0).toFixed(2),\n    }));\n    setPaybackData(updatedData);\n  }, []);\n\n  const filteredData = getFilteredData(paybackData, monthFilter, '');\n  const totalAmount = getTotalAmount(filteredData);\n  const uniqueMonths = getUniqueValues(paybackData, 'name');\n\n  return (\n    <div>\n      <h1>Pocket PAYBACK 24</h1>\n      <div>\n        <label>\n          Filter by Month:\n          <select value={monthFilter} onChange={(e) => handleFilterChange(e, 'name', setMonthFilter, () => {})}>\n            <option value=\"\">All</option>\n            {uniqueMonths.map((month) => (\n              <option key={month} value={month}>\n                {month}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n      <table>\n        <thead>\n          <tr>\n            <th>Month</th>\n            <th>All Amount</th>\n            <th>Not For Me</th>\n            <th>Limit Used</th>\n            <th>Rest</th>\n            <th>Over Used</th>\n            <th>Points</th>\n            <th>Points in Euro</th>\n            <th>Edit/Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredData.map((payback, index) => (\n            <tr key={index}>\n              <td>{payback.name}</td>\n              <td>{payback.allAmount.toFixed(2)} €</td>\n              <td>{payback.notForMe.toFixed(2)} €</td>\n              <td>{payback.limitUsed.toFixed(2)} €</td>\n              <td>{payback.rest} €</td>\n              <td>{payback.overUsed} €</td>\n              <td>{payback.punkte}</td>\n              <td>{payback.pointsInEuro} €</td>\n              <td>\n                <button onClick={() => handleEdit(index, paybackData, setNewPayback, setEditIndex)}>Edit</button>\n                <button onClick={() => handleDelete(index, paybackData, setPaybackData, setNewPayback, setEditIndex)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n          <tr>\n            <td><strong>Total</strong></td>\n            <td><strong>{totalAmount} €</strong></td>\n            <td colSpan=\"7\"></td>\n          </tr>\n        </tbody>\n      </table>\n      <h2>{editIndex !== null ? 'Edit Payback' : 'Add New Payback'}</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Month\"\n          value={newPayback.name}\n          onChange={(e) => setNewPayback({ ...newPayback, name: e.target.value })}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"All Amount\"\n          value={newPayback.allAmount}\n          onChange={(e) => setNewPayback({ ...newPayback, allAmount: e.target.value })}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Not For Me\"\n          value={newPayback.notForMe}\n          onChange={(e) => setNewPayback({ ...newPayback, notForMe: e.target.value })}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Limit Used\"\n          value={newPayback.limitUsed}\n          onChange={(e) => setNewPayback({ ...newPayback, limitUsed: e.target.value })}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Rest\"\n          value={newPayback.rest}\n          onChange={(e) => setNewPayback({ ...newPayback, rest: e.target.value })}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Over Used\"\n          value={newPayback.overUsed}\n          onChange={(e) => setNewPayback({ ...newPayback, overUsed: e.target.value })}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Points\"\n          value={newPayback.punkte}\n          onChange={(e) => setNewPayback({ ...newPayback, punkte: e.target.value })}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Points in Euro\"\n          value={newPayback.pointsInEuro}\n          onChange={(e) => setNewPayback({ ...newPayback, pointsInEuro: e.target.value })}\n        />\n        <button onClick={() => handleAddOrUpdate(newPayback, setNewPayback, paybackData, setPaybackData, editIndex, setEditIndex)}>\n          {editIndex !== null ? 'Update Payback' : 'Add Payback'}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default PocketPayback;\n\n"],"names":["paybackData","setPaybackData","useState","paybackDataFile","newPayback","setNewPayback","name","allAmount","notForMe","limitUsed","rest","overUsed","punkte","pointsInEuro","editIndex","setEditIndex","monthFilter","setMonthFilter","useEffect","updatedData","map","item","toFixed","filteredData","getFilteredData","totalAmount","getTotalAmount","uniqueMonths","getUniqueValues","_jsxs","children","_jsx","value","onChange","e","handleFilterChange","month","payback","index","onClick","handleEdit","handleDelete","colSpan","type","placeholder","target","handleAddOrUpdate"],"sourceRoot":""}